#!/usr/bin/env python3
import argparse

def main(args):
    import datetime
    import os

    def make_datetime_date(date_string):
        date_components = [int(date_component) for date_component in date_string.split("-")]
        date = datetime.date(date_components[0], date_components[1], date_components[2])
        return date

    def modify_dates(command, date):
        try:
            date = make_datetime_date(date)
        except (ValueError, IndexError):
            print("Incorrect date format.")
        else:
            if command == "a":
                    date_list.write(date.isoformat() + "\n")
                    print("Date added.")

            else:
                try:
                    dates.remove(date.isoformat() + "\n")
                except ValueError:
                    print("Date not found.")
                else:
                    date_list.seek(0)
                    date_list.truncate()
                    for remaining_date in dates:
                        date_list.write(remaining_date)
                    print("Date removed.")

    def countdown():
        today = datetime.date.today()

        for date in dates:
            time_remaining = make_datetime_date(date) - today
            if time_remaining == abs(time_remaining):
                print(date[:-1] + ": " + str(time_remaining.days) + " days (" + str(time_remaining.days * 24) + " hours) remaining.")
            else:
                print(date[:-1] + " has passed.", end=' ')
                modify_dates("r", date[:-1])

    my_loc = os.path.dirname(os.path.abspath(__file__))
    with open(os.path.join(my_loc, "date_list"), "a+") as date_list:
        date_list.seek(0)
        dates = [date for date in date_list]
        for key, value in args.items():
            if value:
                modify_dates(key, value)
                break
        else:
            countdown()

            

cli = argparse.ArgumentParser(description="Countdown to a specific date.")
date_commands = cli.add_mutually_exclusive_group()
date_commands.add_argument("-a", metavar="date", help="Add date in YYYY-MM-DD formate for counting down to.")
date_commands.add_argument("-r", metavar="date", help="Removed a currently tracked date.")

args = cli.parse_args()
main(vars(args))
